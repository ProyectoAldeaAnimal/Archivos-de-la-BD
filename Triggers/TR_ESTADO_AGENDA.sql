CREATE TRIGGER `TR_ESTADO_AGENDA` AFTER UPDATE ON `agenda`
 FOR EACH ROW BEGIN
DECLARE SOLICITUD INT;
DECLARE OH_INICIAL INT;
DECLARE BLOQUE INT;
DECLARE I INT;
DECLARE PIVOT INT;
DECLARE RUT varchar(20);
DECLARE DATOSD varchar(500);
DECLARE DATOSA varchar(500);
/*SELECCIONA EL BLOQUE ASOCIADO A LA PRESTACION DEL BLOQUE*/
SET BLOQUE = (SELECT P.NUMERO_BLOQUES FROM agenda as a,pres as p WHERE a.ID_PRES = p.ID_PRES and a.ID_AGENDA = OLD.ID_AGENDA and a.ID_PRES = OLD.ID_PRES);
/*SELECCIONA LA AGENDA QUE SE MODIFICO*/
SET SOLICITUD=OLD.ID_AGENDA;
SET RUT = (SELECT V.RUT_VET FROM vet as V  WHERE NEW.ID_VET = V.ID_VET LIMIT 1);
/*BUSCA LA OFERTA HORARIA ASOCIADA AL BLOQUE , EL ID INICIAL*/
SET OH_INICIAL = 
(SELECT oh.ID_OFERTA_HOR 
FROM bloq_agen as ba , oferta_hor as oh
WHERE SOLICITUD=ba.ID_AGENDA and  oh.ID_OFERTA_HOR = ba.ID_OFERTA_HOR 
ORDER BY oh.ID_OFERTA_HOR
LIMIT 1);
SET DATOSD= (
	SELECT CONCAT(
		CAST(NEW.ID_AGENDA AS CHAR),',',
		CAST(NEW.ID_MAS AS CHAR),',',
		CAST(NEW.ID_VET AS CHAR),',',
		CAST(NEW.ID_PRES AS CHAR),',',
		NEW.ESTADO_AGENDA));
        
SET DATOSA= (
	SELECT CONCAT(
		CAST(OLD.ID_AGENDA AS CHAR),',',
		CAST(OLD.ID_MAS AS CHAR),',',
		CAST(OLD.ID_VET AS CHAR),',',
		CAST(OLD.ID_PRES AS CHAR),',',
		OLD.ESTADO_AGENDA));


/*SI EL BLOQUE SE CAMBIO A ACEPTADO*/
IF(NEW.ESTADO_AGENDA='A') THEN
/*SI SOLO TIENE ASOCIADA UN BLOQUE*/
IF(BLOQUE=1) THEN
UPDATE `oferta_hor`as oh SET `ESTADO_AGENDAMIENTO`=NEW.ESTADO_AGENDA
WHERE oh.ID_OFERTA_HOR = OH_INICIAL;
/*ACTUALIZA LA TABLA LOG SQL*/
INSERT INTO `log_sql`(`ID_LOG`, `RUT_USUARIO`, `TABLA`, `INSTRUCCION`, `DATOS_ANTES`, `DATOS_DESPUES`, `FECHA_MOD`) VALUES (NULL,RUT,'OFERTA_HOR','UPDATE',DATOSA,DATOSD,CURRENT_TIMESTAMP());
/*SI TIENE ASOCIADO MAS DE UN BLOQUE*/
ELSE 
SET I=0;
SET PIVOT = OH_INICIAL;
WHILE I < BLOQUE DO
UPDATE `oferta_hor`as oh SET `ESTADO_AGENDAMIENTO`='A'
WHERE oh.ID_OFERTA_HOR = PIVOT;
INSERT INTO `log_sql`(`ID_LOG`, `RUT_USUARIO`, `TABLA`, `INSTRUCCION`, `DATOS_ANTES`, `DATOS_DESPUES`, `FECHA_MOD`) VALUES (NULL,RUT,'OFERTA_HOR','UPDATE',DATOSA,DATOSD,CURRENT_TIMESTAMP());
SET I=I+1;
SET PIVOT=PIVOT+1;
END WHILE;
END IF;
ELSE 
INSERT INTO `log_sql`(`ID_LOG`, `RUT_USUARIO`, `TABLA`, `INSTRUCCION`, `DATOS_ANTES`, `DATOS_DESPUES`, `FECHA_MOD`) VALUES (NULL,RUT,'OFERTA_HOR','UPDATE',DATOSA,DATOSD,CURRENT_TIMESTAMP());
END IF;


END